{"version":3,"sources":["Slider.js","SidebarItem.js","App.js","index.js"],"names":["Slider","min","max","value","handleChange","className","type","onChange","SidebarItem","name","active","handleClick","onClick","DEFAULT_OPTIONS","property","range","unit","App","useState","selectedOptionIndex","setSelectedOptionIndex","options","setOptions","selectedOption","getImageStyle","filter","map","option","join","console","log","style","index","target","prevOptions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sMAEe,SAASA,EAAT,GAAmD,IAAjCC,EAAgC,EAAhCA,IAAKC,EAA2B,EAA3BA,IAAKC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,aAChD,OACE,qBAAKC,UAAU,mBAAf,SACE,uBACEC,KAAK,QACLD,UAAU,SACVJ,IAAKA,EACLC,IAAKA,EACLC,MAAOA,EACPI,SAAUH,MCTH,SAASI,EAAT,GAAqD,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,YAClD,OACE,wBACEN,UAAS,uBAAkBK,EAAS,SAAW,IAC/CE,QAASD,EAFX,SAIGF,ICFP,IAAMI,EAAkB,CACtB,CACEJ,KAAM,aACNK,SAAU,aACVX,MAAO,IACPY,MAAO,CACLd,IAAK,EACLC,IAAK,KAEPc,KAAM,KAER,CACEP,KAAM,WACNK,SAAU,WACVX,MAAO,IACPY,MAAO,CACLd,IAAK,EACLC,IAAK,KAEPc,KAAM,KAER,CACEP,KAAM,aACNK,SAAU,WACVX,MAAO,IACPY,MAAO,CACLd,IAAK,EACLC,IAAK,KAEPc,KAAM,KAER,CACEP,KAAM,YACNK,SAAU,YACVX,MAAO,EACPY,MAAO,CACLd,IAAK,EACLC,IAAK,KAEPc,KAAM,KAER,CACEP,KAAM,QACNK,SAAU,QACVX,MAAO,EACPY,MAAO,CACLd,IAAK,EACLC,IAAK,KAEPc,KAAM,KAER,CACEP,KAAM,aACNK,SAAU,aACVX,MAAO,EACPY,MAAO,CACLd,IAAK,EACLC,IAAK,KAEPc,KAAM,OAER,CACEP,KAAM,OACNK,SAAU,OACVX,MAAO,EACPY,MAAO,CACLd,IAAK,EACLC,IAAK,IAEPc,KAAM,OAqDKC,MAjDf,WAAgB,IAAD,EACyCC,mBAAS,GADlD,mBACNC,EADM,KACeC,EADf,OAEiBF,mBAASL,GAF1B,mBAENQ,EAFM,KAEGC,EAFH,KAGPC,EAAiBF,EAAQF,GAW/B,SAASK,IAKP,MAAO,CAAEC,OAJOJ,EAAQK,KAAI,SAAAC,GAC1B,MAAM,GAAN,OAAUA,EAAOb,SAAjB,YAA6Ba,EAAOxB,OAApC,OAA4CwB,EAAOX,KAAnD,QAGuBY,KAAK,MAKhC,OAFAC,QAAQC,IAAIN,KAGV,sBAAKnB,UAAU,YAAf,UACE,qBAAKA,UAAU,aAAa0B,MAAOP,MACnC,qBAAKnB,UAAU,UAAf,SACGgB,EAAQK,KAAI,SAACC,EAAQK,GACpB,OACE,cAACxB,EAAD,CAEEC,KAAMkB,EAAOlB,KACbC,OAAQsB,IAAUb,EAClBR,YAAa,kBAAMS,EAAuBY,KAHrCA,QAQb,cAAChC,EAAD,CACEC,IAAKsB,EAAeR,MAAMd,IAC1BC,IAAKqB,EAAeR,MAAMb,IAC1BC,MAAOoB,EAAepB,MACtBC,aAtCN,YAAyC,IAAX6B,EAAU,EAAVA,OAC5BX,GAAW,SAAAY,GACT,OAAOA,EAAYR,KAAI,SAACC,EAAQK,GAC9B,OAAIA,IAAUb,EAA4BQ,EACnC,2BAAKA,GAAZ,IAAoBxB,MAAO8B,EAAO9B,qBClF1CgC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f41ce572.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Slider({ min, max, value, handleChange}) {\r\n  return (\r\n    <div className=\"slider-container\">\r\n      <input\r\n        type=\"range\"\r\n        className=\"slider\"\r\n        min={min}\r\n        max={max}\r\n        value={value}\r\n        onChange={handleChange}\r\n      />\r\n    </div>\r\n  )\r\n}","import React from 'react'\r\n\r\nexport default function SidebarItem({ name, active, handleClick }) {\r\n  return (\r\n    <button \r\n      className={`sidebar-item ${active ? 'active' : ''}`}\r\n      onClick={handleClick}\r\n    >\r\n      {name}\r\n    </button>\r\n  )\r\n}","\r\nimport React, { useState } from 'react';\r\nimport './App.css';\r\nimport Slider from './Slider'\r\nimport SidebarItem from './SidebarItem'\r\n\r\nconst DEFAULT_OPTIONS = [\r\n  {\r\n    name: 'Brightness',\r\n    property: 'brightness',\r\n    value: 100,\r\n    range: {\r\n      min: 0,\r\n      max: 200\r\n    },\r\n    unit: '%'\r\n  },\r\n  {\r\n    name: 'Contrast',\r\n    property: 'contrast',\r\n    value: 100,\r\n    range: {\r\n      min: 0,\r\n      max: 200\r\n    },\r\n    unit: '%'\r\n  },\r\n  {\r\n    name: 'Saturation',\r\n    property: 'saturate',\r\n    value: 100,\r\n    range: {\r\n      min: 0,\r\n      max: 200\r\n    },\r\n    unit: '%'\r\n  },\r\n  {\r\n    name: 'Grayscale',\r\n    property: 'grayscale',\r\n    value: 0,\r\n    range: {\r\n      min: 0,\r\n      max: 100\r\n    },\r\n    unit: '%'\r\n  },\r\n  {\r\n    name: 'Sepia',\r\n    property: 'sepia',\r\n    value: 0,\r\n    range: {\r\n      min: 0,\r\n      max: 100\r\n    },\r\n    unit: '%'\r\n  },\r\n  {\r\n    name: 'Hue Rotate',\r\n    property: 'hue-rotate',\r\n    value: 0,\r\n    range: {\r\n      min: 0,\r\n      max: 360\r\n    },\r\n    unit: 'deg'\r\n  },\r\n  {\r\n    name: 'Blur',\r\n    property: 'blur',\r\n    value: 0,\r\n    range: {\r\n      min: 0,\r\n      max: 20\r\n    },\r\n    unit: 'px'\r\n  }\r\n]\r\n\r\nfunction App() {\r\n  const [selectedOptionIndex, setSelectedOptionIndex] = useState(0)\r\n  const [options, setOptions] = useState(DEFAULT_OPTIONS)\r\n  const selectedOption = options[selectedOptionIndex]\r\n\r\n  function handleSliderChange({ target }) {\r\n    setOptions(prevOptions => {\r\n      return prevOptions.map((option, index) => {\r\n        if (index !== selectedOptionIndex) return option\r\n        return { ...option, value: target.value }\r\n      })\r\n    })\r\n  }\r\n\r\n  function getImageStyle() {\r\n    const filters = options.map(option => {\r\n      return `${option.property}(${option.value}${option.unit})`\r\n    })\r\n\r\n    return { filter: filters.join(' ') }\r\n  }\r\n\r\n  console.log(getImageStyle())\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"main-image\" style={getImageStyle()} />\r\n      <div className=\"sidebar\">\r\n        {options.map((option, index) => {\r\n          return (\r\n            <SidebarItem\r\n              key={index}\r\n              name={option.name}\r\n              active={index === selectedOptionIndex}\r\n              handleClick={() => setSelectedOptionIndex(index)}\r\n            />\r\n          )\r\n        })}\r\n      </div>\r\n      <Slider\r\n        min={selectedOption.range.min}\r\n        max={selectedOption.range.max}\r\n        value={selectedOption.value}\r\n        handleChange={handleSliderChange}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}